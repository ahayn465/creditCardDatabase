
package database;

/**
 * 
 */

import java.util.*;


/**
 * @author Amanda
 *
 */
public class AccountDatabase {
	
	 private class MyComparable implements Comparator<Account>
	    {
	        public int compare(Account o1, Account o2) 
	        {
	            int res = 0;
	            if(o1.getName().compareToIgnoreCase(o2.getName()) < 0) res = -1;
	            else if(o1.getName().compareToIgnoreCase(o2.getName()) > 0) res = 1;
	            else res = 0;

	            return res;
	        }
	    } 


	HashMap<String, Account> accounts; 

	/**
	 * 
	 */
	public AccountDatabase()
	{
		accounts = new HashMap<String, Account>();
	}


	/**
	 * @param key
	 * @param account
	 * @return
	 */
	public boolean add(String key, Account account)
	{
		boolean success = false;

		if(!containsKey(key))
		{
			accounts.put(key, account);
			success = true;

		}
		return success;


	}

	/**
	 * @param key
	 * @return
	 */
	public boolean remove(String key)
	{
		boolean success = false;

		if(containsKey(key))
		{
			accounts.remove(key);
			success = true;
		}

		return success;
	}

	public Account find (String key)
	{
		Account temp = null;

		temp = accounts.get(key);

		return temp;
	}

	/**
	 * @param key
	 * @return
	 */
	public boolean containsKey(String key)
	{

		return accounts.containsKey(key);

	}

	public ArrayList<Account> getSortedList()
	{
		ArrayList<Account> allAccounts = new ArrayList<Account>(accounts.values());

		Collections.sort(allAccounts, new MyComparable());
		
		return allAccounts;
	}
}
